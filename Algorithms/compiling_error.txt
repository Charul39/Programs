F:\PROG\Algorithms\Dijkstra.cpp: In function 'void dijkstra()':
F:\PROG\Algorithms\Dijkstra.cpp:19:14: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     s.insert({0 , 1});                          // insert the source node with distance = 0
              ^
F:\PROG\Algorithms\Dijkstra.cpp:19:21: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
     s.insert({0 , 1});                          // insert the source node with distance = 0
                     ^
F:\PROG\Algorithms\Dijkstra.cpp:24:19: error: 'struct std::pair<int, int>' has no member named 's'
         int x = p.s; int wei = p.f;
                   ^
F:\PROG\Algorithms\Dijkstra.cpp:24:34: error: 'struct std::pair<int, int>' has no member named 'f'
         int x = p.s; int wei = p.f;
                                  ^
F:\PROG\Algorithms\Dijkstra.cpp:30:29: error: 'struct std::pair<int, int>' has no member named 'f'
             int e = v[x][i].f; int w = v[x][i].s;
                             ^
F:\PROG\Algorithms\Dijkstra.cpp:30:48: error: 'struct std::pair<int, int>' has no member named 's'
             int e = v[x][i].f; int w = v[x][i].s;
                                                ^
F:\PROG\Algorithms\Dijkstra.cpp:34:26: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
                 s.insert({dist[e],  e} );           // insert the next vertex with the updated distance
                          ^
F:\PROG\Algorithms\Dijkstra.cpp:34:40: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
                 s.insert({dist[e],  e} );           // insert the next vertex with the updated distance
                                        ^
